name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, "feat/*", "release/*", "dev"]

jobs:
  run_tests_ubuntu:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.8.16"]

    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Poetry Version
        run: |
          poetry --version
      - name: Poetry Install Dependencies
        run: |
          pyver=`python -c "import platform; print(platform.python_version())"`
          poetry env use $pyver
          poetry install --no-interaction --no-root

      - name: Test with pytest
        run: |
          poetry run pytest -v

  run_tests_macos:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest"]
        python-version: ["3.8.16"]

    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Poetry Version
        run: |
          poetry --version
      - name: Poetry Install Dependencies
        run: |
          pyver=`python -c "import platform; print(platform.python_version())"`
          poetry env use $pyver
          poetry install --no-interaction --no-root
      - name: Test with pytest
        run: |
          poetry run pytest -v

          # run_tests_windows:
          #   runs-on: ${{ matrix.os }}

          #   strategy:
          #     fail-fast: false
          #     matrix:
          #       os: ["windows-latest"]
          #       python-version: ["3.8.16"]

          #   timeout-minutes: 20

          #   steps:
          #     - name: Checkout
          #       uses: actions/checkout@v3

          #     - name: Set up Python ${{ matrix.python-version }}
          #       uses: actions/setup-python@v3
          #       with:
          #         python-version: ${{ matrix.python-version }}

          #     - name: Install poetry
          #       run: |
          #         curl -sSL https://install.python-poetry.org | python3 -
          #         echo "$HOME/.local/bin" >> $GITHUB_PATH
          #     - name: Poetry Version
          #       run: |
          #         poetry --version
          #     - name: Poetry Install Dependencies
          #       run: |
          #         pyver=`python -c "import platform; print(platform.python_version())"`
          #         poetry env use $pyver
          #         poetry install --no-interaction --no-root
          #     - name: Test with pytest
          #       run: |
          #         poetry run pytest -v

  # upload code coverage report
  code-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8.16"

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Poetry Version
        run: |
          poetry --version
      - name: Poetry Install Dependencies
        run: |
          poetry install --no-interaction --no-root

      - name: Run tests and collect coverage
        run: poetry run pytest --cov src # NEEDS TO BE UPDATED WHEN CHANGING THE NAME OF "src" FOLDER

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
